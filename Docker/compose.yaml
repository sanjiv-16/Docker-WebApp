services:
  db:
    image: postgres:10
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:   
      - db_data:/var/lib/postgresql/data
    networks:
      - webapp_network
  rest-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: rest-api:latest
    container_name: rest-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-container:5432/postgres # Set the URL for the database connection to use the postgres-container hostname
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW-SQL=true
    networks:
      - webapp_network
    depends_on:   # Docker Compose will start the dependent services first, and wait for them to be ready before starting the dependent service.
      - db
  
networks: # Docker sets up a bridge network that allows all containers on the network to communicate with each other
  webapp_network:
    driver: bridge
volumes: # persist data between container instances.
  db_data: